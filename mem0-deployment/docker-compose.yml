version: '3.8'

services:
  # PostgreSQL 数据库
  mem0-postgres:
    image: pgvector/pgvector:pg16
    container_name: mem0-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-mem0}
      - POSTGRES_USER=${POSTGRES_USER:-mem0}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-mem0_secure_password_2024}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mem0} -d ${POSTGRES_DB:-mem0}"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-5}
      start_period: 30s

  # Qdrant 向量数据库
  mem0-qdrant:
    image: qdrant/qdrant:latest
    container_name: mem0-qdrant
    restart: unless-stopped
    ports:
      - "${QDRANT_PORT:-6333}:6333"
      - "${QDRANT_GRPC_PORT:-6334}:6334"
    volumes:
      - qdrant_data:/qdrant/storage

    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/tcp/localhost/6333' || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-5}
      start_period: 30s

  # Neo4j 图数据库
  mem0-neo4j:
    image: neo4j:5.25
    container_name: mem0-neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"  # Neo4j Browser Web界面
      - "${NEO4J_BOLT_PORT:-7687}:7687"  # Bolt协议端口
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "${NEO4J_PASSWORD:-password}", "RETURN 1"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-5}
      start_period: 60s

  # Mem0 API 服务
  mem0-api:
    build:
      context: ./mem0/server
      dockerfile: Dockerfile
    container_name: mem0-api
    restart: unless-stopped
    ports:
      - "${MEM0_API_PORT:-8888}:8000"
    volumes:
      - ./mem0/server:/app  # 挂载源代码目录以支持开发模式
      - ./configs:/app/configs
      - ${DATA_PATH:-./data}:/app/data
      - ${LOGS_PATH:-./logs}:/app/logs
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - POSTGRES_HOST=${POSTGRES_HOST:-mem0-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-mem0}
      - POSTGRES_USER=${POSTGRES_USER:-mem0}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-mem0_secure_password_2024}
    depends_on:
      - mem0-postgres
      - mem0-qdrant
      - mem0-neo4j

  # Mem0 Web UI 服务
  mem0-webui:
    build:
      context: ../mem0Client
      dockerfile: Dockerfile
    container_name: mem0-webui
    restart: unless-stopped
    ports:
      - "8503:8503"
    environment:
      - STREAMLIT_SERVER_PORT=8503
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      # 使用同一个PostgreSQL实例
      - POSTGRES_HOST=mem0-postgres
      - POSTGRES_DB=mem0
      - POSTGRES_USER=mem0
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-mem0_password}
      - POSTGRES_PORT=5432
      # API配置
      - MEM0_API_URL=http://mem0-api:8000
      - MEM0_API_KEY=${MEM0_API_KEY:-local_api_key}
    volumes:
      - ../mem0Client/data:/app/data
      - ../mem0Client/logs:/app/logs
      - ../mem0Client:/app
    depends_on:
      - mem0-api
      - mem0-postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8503/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  qdrant_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  mem0_data:

networks:
  default:
    external: true
    name: mem0-unified-network
